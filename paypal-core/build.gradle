buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    //id 'signing'
}

description = 'paypal-core'

dependencies {
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.7'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.7'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'

    testImplementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'
}
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'paypal-core'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'PayPal core'
                description = 'A Java library for integrating PayPal payments in own Java applications'
                url = 'https://github.com/micromata/paypal'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/micromata/paypal/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'kreinhard'
                        name = 'Kai Reinhard'
                    }
                }
                scm {
                    connection = 'scm:git:git://example.com/my-library.git'
                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
                    url = 'http://example.com/my-library/'
                }
            }
        }
    }
    repositories {
        maven {
            /*credentials {
                username "$mavenUser"
                password "$mavenPassword"
            }*/
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

/*signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}*/


javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}